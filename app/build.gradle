apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 30
    buildToolsVersion '30.0.2'

    splits {

        // Configures multiple APKs based on ABI.
        abi {
            // Enables building multiple APKs per ABI.
            enable true
            // By default all ABIs are included, so use reset() and include to specify that we only
            // want APKs for x86 and x86_64.
            // Resets the list of ABIs that Gradle should create APKs for to none.
            reset()
            // Specifies a list of ABIs that Gradle should create APKs for.
            include "x86", "x86_64", "arm64-v8a", "armeabi-v7a"
            // Specifies that we do not want to also generate a universal APK that includes all ABIs.
            universalApk false
        }
    }


        defaultConfig {
        applicationId 'de.hsaugsburg.teamulster.sohappy'
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 2
        versionName '1.0-rc01'

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }

    compileOptions {
        coreLibraryDesugaringEnabled true

        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    buildFeatures {
        dataBinding true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    aaptOptions {
        noCompress 'tflite'
    }
}

dependencies {
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.0.10'

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.4.0'
    implementation 'androidx.core:core-ktx:1.3.1'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'

    // The following line is optional, as the core library is included indirectly by camera-camera2
    implementation 'androidx.camera:camera-core:1.0.0-beta08'
    implementation 'androidx.camera:camera-camera2:1.0.0-beta08'
    // If you want to additionally use the CameraX Lifecycle library
    implementation 'androidx.camera:camera-lifecycle:1.0.0-beta08'
    implementation 'androidx.cardview:cardview:1.0.0'

    implementation 'jp.co.cyberagent.android:gpuimage:2.0.4'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.0'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.0'

    // local database
    implementation 'org.dizitart:potassium-nitrite:3.4.2'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.7.3'

    // Detection libs
    implementation 'com.quickbirdstudios:opencv:4.3.0'
    implementation('com.google.guava:guava:29.0-jre')
    implementation 'org.tensorflow:tensorflow-lite-task-vision:0.0.0-nightly'
    implementation 'org.tensorflow:tensorflow-lite-task-text:0.0.0-nightly'
    implementation 'com.google.mlkit:face-detection:16.0.2'

    // Material Popups
    implementation 'com.google.android.material:material:1.2.1'

    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test:core-ktx:1.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    androidTestImplementation 'androidx.test:core-ktx:1.3.0'
    androidTestImplementation 'org.jetbrains.kotlin:kotlin-test:1.4.0'


}